exit
cardinal = rover["cardinals"]
rover
cardinal
c
data
exit
abc
data
abc
exit
data[0]["id"]
id
data["id"][0] == id
data["id"] == id
payload
data
exit
data
n
rover
data
rover
exit
@rovers
@rover
payload
data
exit
rover.merge(JSON.parse(payload.to_json))
rover
JSON.parse(payload.to_json)
JSON.parse(payload)
JSON.parse(rover)
rover
payload
payoad
rover
rover.merge(payload)
rover.merge(payload.to_json)
payload
rover
rover.merge(payload)
rover < payload
payload
rover
rover >> payload
rover << payload
payload
rover
exit
id
payload
data
@rovers
rover
payload
data
exit
grid
y
linha
x
position
c
y
x
linha
position
y
x
exit
y
x
position["position_x"]
position
c
exit
JSON.parse(@rovers).select{|rover| rover["id"] == id }[0]
JSON.parse(@rovers).select{|rover| rover["id"] == id }
JSON.parse(@rovers)
@rovers
exit
abc.find(id: "71489d2e-8a84-4e89-a404-67fe8db3b133")
abc.all
abc = RoverModel.new
exit
abc.all
abc = RoverModel.new
exit
@rovers
abc.all
abc = RoverModel.new
exit
abc.all
abc = RoverModel.new
exit
abc.all
abc = RoverModel.new
exit
abc.all("")
abc.all()
abc.all('aasd')
abc.all('a')
abc = RoverModel.new
exit
abc.all('a')
abc.all(a)
abc.all
abc = RoverModel.new
exit
abc.find(id: "1")
abc.find
abc.all()
abc.all
abc = RoverModel.new
exit
abc.all
abc = RoverModel.new
RoverModel.new.all
RoverModel.new.rovers
RoverModel.new
RoverModel
exit
RoverModel.new().find(id: rover["id"])
RoverModel.new.find(id: rover["id"])
exit
RoverModel.new.all
RoverModel.all
RoverModel.new.find(id: rover["id"])
exit
RoverModel.new.all
RoverModel.new.find(id: rover["id"])
exit
RoverModel.new.all
RoverModel.new.methods
RoverModel.new.public_method
RoverModel.new.public_instance_methods
RoverModel.public_instance_methods
RoverModel.all
RoverModel.instance_methods
RoverModel.instance_methods,
RoverModel.methods
RoverModel.find(id:0)
RoverModel.new.find(id:0)
RoverModel.new.find(id= 0)
RoverModel.new.find( 0)
RoverModel.new.find(id: 0)
RoverModel.new.find
exit
load!
reload!
Rover.new.all()
Rover.new.all
Rover.new.find()
Rover.new.find(id: "")
Rover.new.find(id: )
Rover.new.find(id: rover["id"])
Rover.find(id: rover["id"])
Rover.new
Rover
Rover.new.find(id: rover["id"])
rover["id"]
Rover.new.find(id: rover["id"])
Rover.new.find
Rover.new
c
cardinal
y
x
c
move
cardinal
y
x
c
move
y
x
cardinal
y
x
c
y
x
cardinal
move
y
x
c
y
x
cardinal
move
exit
cardinal
y
x
c
y
x
c
y + (move[:y])
move
y
x
c
cardinal
x
n
1 + (0)
1 +0
move[:x]
1 + (1)
x + (move[:x])
move
y
x
c
y
n
x
n
y
x
cardinal
move
exit
cardinal
cardinal.to_sym
@cardinals[cardinal.to_sym]
cardinal
next_step
exit
step.mode
m
step
exit
3 + (-1)
3 + (1)
3 + (-1)
meth.right
meth.left
meth
 exit
teste[rover[:cardinals].downcase.to_sym]
rover[:cardinals].downcase.to_sym
rover[:cardinals].to_sym
teste = {e: 'abc'}
rover[:cardinals].to_sym
rover[:position_x]
x
rover[:cardinals]
rover["cardinals"]
rover
cardinal
